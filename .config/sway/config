# Default config for sway
#
# Copy this to ~/.config/sway/config and edit it to your liking.
#
# Read `man 5 sway` for a complete reference.

### Variables
#
# Logo key. Use Mod1 for Alt.
set $mod Mod4
# Home row direction keys, like vim
set $left h
set $down j
set $up k
set $right l
# Your preferred terminal emulator
set $term kitty
# Your preferred application launcher
# Note: pass the final command to swaymsg so that the resulting window can be opened
# on the original workspace that the command was run on.
set $menu dmenu_path | wofi --show drun -I | xargs swaymsg exec --

### Output configuration
#
# Default wallpaper (more resolutions are available in /usr/share/backgrounds/sway/)
output * bg ~/wallpaper/wallpaper.png fill
#
# Example configuration:
#
#   output HDMI-A-1 resolution 1920x1080 position 1920,0
#
# You can get the names of your outputs by running: swaymsg -t get_outputs

### Idle configuration
#
# Example configuration:
#
#exec swayidle -w \
#          timeout 300 'swaylock -f -c 000000' \
#          timeout 600 'swaymsg "output * power off"' resume 'swaymsg "output * power on"' \
#          before-sleep 'swaylock -f -c 000000'
#
# This will lock your screen after 300 seconds of inactivity, then turn off
# your displays after another 300 seconds, and turn your screens back on when
# resumed. It will also lock your screen before your computer goes to sleep.

#Input configuration
#
# Example configuration:
#
input "10182:480:GXTP7863:00_27C6:01E0_Touchpad" {
       dwt enabled
       tap enabled
       natural_scroll enabled
       middle_emulation enabled
       #left_handed enabled
   }
input * {
	xkb_layout us,ru
	xkb_options grp:alt_shift_toggle
}
#
# You can get the names of your inputs by running: swaymsg -t get_inputs
# Read `man 5 sway-input` for more information about this section.

#Fonts

font pango:Roboto 10


#Themes

set $gnome-schema org.gnome.desktop.interface
	exec_always {
        	gsettings set $gnome-schema gtk-theme 'Yaru-dark'
        	gsettings set $gnome-schema icon-theme 'Yaru-dark'
        	gsettings set $gnome-schema cursor-theme 'Yaru-dark'
        	gsettings set $gnome-schema font-name 'roboto 10'

}


### Key bindings
#

# Extensions

# Screenshot

bindsym --to-code $mod+Shift+a exec grim

# Snipping

bindsym --to-code $mod+Shift+s exec grim -g "$(slurp)"


# Basics:
#
    # Start a terminal
    bindsym --to-code $mod+Return exec $term

    # Kill focused window
    bindsym --to-code $mod+Shift+q kill

    # Start your launcher
    bindsym --to-code $mod+d exec $menu

    # Drag floating windows by holding down $mod and left mouse button.
    # Resize them with right mouse button + $mod.
    # Despite the name, also works for non-floating windows.
    # Change normal to inverse to use left mouse button for resizing and right
    # mouse button for dragging.
    floating_modifier $mod normal

    # Reload the configuration file
    bindsym $mod+Shift+c reload

    # Exit sway (logs you out of your Wayland session)
    bindsym $mod+Shift+e exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -B 'Yes, exit sway' 'swaymsg exit'
#
# Moving around:
#
    # Move your focus around
    bindsym $mod+$left focus left
    bindsym $mod+$down focus down
    bindsym $mod+$up focus up
    bindsym $mod+$right focus right
    # Or use $mod+[up|down|left|right]
    bindsym $mod+Left focus left
    bindsym $mod+Down focus down
    bindsym $mod+Up focus up
    bindsym $mod+Right focus right

    # Move the focused window with the same, but add Shift
    bindsym $mod+Shift+$left move left
    bindsym $mod+Shift+$down move down
    bindsym $mod+Shift+$up move up
    bindsym $mod+Shift+$right move right
    # Ditto, with arrow keys
    bindsym $mod+Shift+Left move left
    bindsym $mod+Shift+Down move down
    bindsym $mod+Shift+Up move up
    bindsym $mod+Shift+Right move right
#
# Workspaces:
#
    # Switch to workspace
    bindsym --to-code $mod+1 workspace number 1
    bindsym --to-code $mod+F1 workspace number 2
    bindsym --to-code $mod+2 workspace number 3
    bindsym --to-code $mod+F2 workspace number 4
    bindsym --to-code $mod+3 workspace number 5
    bindsym --to-code $mod+F3 workspace number 6
    bindsym --to-code $mod+4 workspace number 7
    bindsym --to-code $mod+F4 workspace number 8
    bindsym --to-code $mod+5 workspace number 9
    bindsym --to-code $mod+F5 workspace number 10
    # Move focused container to workspace
    bindsym --to-code $mod+Shift+1 move container to workspace number 1
    bindsym --to-code $mod+Shift+F1 move container to workspace number 2
    bindsym --to-code $mod+Shift+2 move container to workspace number 3
    bindsym --to-code $mod+Shift+F2 move container to workspace number 4
    bindsym --to-code $mod+Shift+3 move container to workspace number 5
    bindsym --to-code $mod+Shift+F3 move container to workspace number 6
    bindsym --to-code $mod+Shift+4 move container to workspace number 7
    bindsym --to-code $mod+Shift+F4 move container to workspace number 8
    bindsym --to-code $mod+Shift+5 move container to workspace number 9
    bindsym --to-code $mod+Shift+F5 move container to workspace number 10
    # Note: workspaces can have any name you want, not just numbers.
    # We just use 1-10 as the default.
#
# Layout stuff:
#
    # You can "split" the current object of your focus with
    # $mod+b or $mod+v, for horizontal and vertical splits
    # respectively.
    bindsym $mod+b splith
    bindsym $mod+v splitv

    # Switch the current container between different layout styles
    bindsym $mod+s layout stacking
    bindsym $mod+w layout tabbed
    bindsym $mod+e layout toggle split

    # Make the current focus fullscreen
    bindsym --to-code $mod+f fullscreen

    # Toggle the current focus between tiling and floating mode
    bindsym $mod+Shift+space floating toggle

    # Swap focus between the tiling area and the floating area
    bindsym $mod+space focus mode_toggle

    # Move focus to the parent container
    bindsym $mod+a focus parent
#
# Scratchpad:
#
    # Sway has a "scratchpad", which is a bag of holding for windows.
    # You can send windows there and get them back later.

    # Move the currently focused window to the scratchpad
    bindsym $mod+Shift+minus move scratchpad

    # Show the next scratchpad window or hide the focused scratchpad window.
    # If there are multiple scratchpad windows, this command cycles through them.
    bindsym $mod+minus scratchpad show
#
# Resizing containers:
#
mode "resize" {
    # left will shrink the containers width
    # right will grow the containers width
    # up will shrink the containers height
    # down will grow the containers height
    bindsym $left resize shrink width 10px
    bindsym $down resize grow height 10px
    bindsym $up resize shrink height 10px
    bindsym $right resize grow width 10px

    # Ditto, with arrow keys
    bindsym Left resize shrink width 10px
    bindsym Down resize grow height 10px
    bindsym Up resize shrink height 10px
    bindsym Right resize grow width 10px

    # Return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+r mode "resize"

#
# Status Bar:
#
# Read `man 5 sway-bar` for more information about this section.
bar {
    swaybar_command waybar

    # When the status_command prints a new line to stdout, swaybar updates.
    # The default just shows the current date and time.
    status_command while date +'%Y-%m-%d %I:%M:%S %p'; do sleep 1; done

    colors {
        statusline #ffffff
        background #323232
        inactive_workspace #32323200 #32323200 #5c5c5c
    }
}

include /etc/sway/config.d/*
xwayland enable
gaps inner 10
gaps outer 4
smart_gaps on
smart_borders on
default_border pixel

#Border Colors

	client.focused			#ffffff #ffffff #00000000 #00000000
	client.focused_inactive		#ffffff #00000000 #00000000 #00000000
	client.unfocused		#ffffff #00000000 #00000000 #00000000
	client.urgent			#ffffff #00000000 #00000000 #00000000
	client.placeholder		#ffffff #00000000 #00000000 #00000000

#ClipBoard

exec wl-paste -t text --watch clipman store --no-persist

#Execute

exec_always autotiling -w 1 2 3 4 5 6 7 8 9 10

exec firefox
exec code
exec spotify
exec thunderbird
exec armcord
exec telegram-desktop
exec whatsie

assign [class="firefox"] workspace 1
assign [class="Code"] workspace 2
assign [app_id="subl"] workspace 2
assign [app_id="kitty"] workspace 3
assign [app_id="org.telegram.desktop"] workspace 7
assign [app_id="com.ktechpit.whatsie"] workspace 7
assign [class="ArmCord"] workspace 4
assign [class="Spotify"] workspace 5
assign [class="thunderbird"] workspace 6

for_window [app_id="nautilus"] border none
for_window [class="firefox"] border none
for_window [class="Code"] border none
for_window [class="balena-etcher"] border none
for_window [class="ArmCord"] border none

# Brightness controls

bindsym --locked XF86MonBrightnessUp exec --no-startup-id light -A 5
bindsym --locked XF86MonBrightnessDown exec --no-startup-id light -U 5

# Multimedia
bindsym --locked XF86AudioRaiseVolume exec ponymix increase 5
bindsym --locked XF86AudioLowerVolume exec ponymix decrease 5
bindsym --locked XF86AudioMute exec ponymix set-volume 0
bindsym --to-code $mod+F12 exec playerctl --player=spotify play-pause
bindsym --to-code $mod+F11 exec playerctl --player=spotify next
bindsym --to-code $mod+F10 exec playerctl --player=spotify previous

# Polkit

exec --no-startup-id /usr/lib/polkit-gnome/polkit-gnome-authentication-agent-1 &
